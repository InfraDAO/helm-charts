apiVersion: apps/v1
kind: deployment
metadata:
  name: {{ include "op-node.fullname" . }}
  labels:
    {{- include "op-node.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "op-node.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "op-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "op-node.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ template "op-node.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $key, $value := .Values.op.ports }}
            {{- if or $value.enabled (eq $key "rpc") }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
            {{- end }}
            {{- end }}
            - name: tcp-p2p
              containerPort: {{ index .Values.op.ports.p2p "listen.tcp" }}
              protocol: TCP
            - name: udp-p2p
              containerPort: {{ index .Values.op.ports.p2p "listen.udp" }}
              protocol: UDP
          command:
            - op-node
          args:
            # jwt
            - --l2.jwt-secret=/jwt/{{ .Values.op.jwt.existingSecret.key | default "jwtSecret" }}

            # Basic args
            {{- range $key, $value := .Values.op.args }}
            - --{{ $key }}={{ $value }}
            {{- end }}

            # Ports configs
            {{- range $key, $value := .Values.op.ports }}
            {{- if or $value.enabled (or (eq $key "rpc") (eq $key "p2p")) }}
            {{- range $config, $configValue := $value }}
            - --{{ $key }}.{{ $config }}={{ $configValue }}
            {{- end }}
            {{- end }}
            {{- end }}

            {{- with .Values.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 60
            tcpSocket:
              port: {{ .Values.op.rpc.port }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 60
            tcpSocket:
              port: {{ .Values.op.rpc.port }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: jwt
            mountPath: /jwt
      volumes:
        - name: jwt
          secret:
            secretName: {{ .Values.op.jwt.existingSecret.name | default "jwt-secret" }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
